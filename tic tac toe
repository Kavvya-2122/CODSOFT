# Simple Tic-Tac-Toe game


board = [' ' for _ in range(9)]

# Function to print the board
def print_board(board):
    for i in range(3):
        print(board[3*i] + '|' + board[3*i+1] + '|' + board[3*i+2])
        if i < 2:
            print('-----')
    print()

# Function to check if a player has won
def check_win(board, player):
    # Possible winning combinations
    win_conditions = [(0, 1, 2), (3, 4, 5), (6, 7, 8),  # Rows
                      (0, 3, 6), (1, 4, 7), (2, 5, 8),  # Columns
                      (0, 4, 8), (2, 4, 6)]            # Diagonals
    for condition in win_conditions:
        if board[condition[0]] == board[condition[1]] == board[condition[2]] == player:
            return True
    return False

# Function to check if the board is full (draw)
def check_draw(board):
    return ' ' not in board

# Minimax algorithm to find the best move for the AI
def minimax(board, is_maximizing):
    if check_win(board, 'O'):
        return 1  # AI wins
    if check_win(board, 'X'):
        return -1  # Human wins
    if check_draw(board):
        return 0  # Draw

    if is_maximizing:
        best_score = -1000
        for i in range(9):
            if board[i] == ' ':
                board[i] = 'O'
                score = minimax(board, False)
                board[i] = ' '
                if score > best_score:
                    best_score = score
        return best_score
    else:
        best_score = 1000
        for i in range(9):
            if board[i] == ' ':
                board[i] = 'X'
                score = minimax(board, True)
                board[i] = ' '
                if score < best_score:
                    best_score = score
        return best_score

# Function to find the best move for the AI
def best_move(board):
    best_score = -1000
    move = -1
    for i in range(9):
        if board[i] == ' ':
            board[i] = 'O'
            score = minimax(board, False)
            board[i] = ' '
            if score > best_score:
                best_score = score
                move = i
    return move

# Main game loop
def play_game():
    while True:
        print_board(board)

        # Check if the game is over
        if check_win(board, 'O'):
            print("AI wins!")
            break
        if check_win(board, 'X'):
            print("You win!")
            break
        if check_draw(board):
            print("It's a draw!")
            break

        # Human move
        human_move = int(input("Enter your move (1-9): ")) - 1
        if board[human_move] != ' ':
            print("Invalid move! Try again.")
            continue
        board[human_move] = 'X'

        # AI move
        ai_move = best_move(board)
        if ai_move != -1:
            board[ai_move] = 'O'

    print_board(board)

# Run the game
if __name__ == "__main__":
    play_game()
